(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{319:function(t,s,a){"use strict";a.r(s);var e=a(8),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("ul",[s("li",[t._v("Git是一个免费的、开源的分布式版本控制系统，可以高速处理从小型到大型的各种项目")])]),t._v(" "),s("h2",{attrs:{id:"下载安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#下载安装"}},[t._v("#")]),t._v(" 下载安装")]),t._v(" "),s("p",[t._v("官网下载："),s("a",{attrs:{href:"https://git-scm.com/downloads",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://git-scm.com/downloads (opens new window)"),s("OutboundLink")],1),t._v("下载完成后使用默认进行安装。")]),t._v(" "),s("h2",{attrs:{id:"git-创建仓库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-创建仓库"}},[t._v("#")]),t._v(" Git 创建仓库")]),t._v(" "),s("p",[t._v("创建一个git仓库有如下几种方式：")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("git init")]),t._v("：初始化一个git仓库")]),t._v(" "),s("li",[s("strong",[t._v("git clone")]),t._v("：clone一个git仓库")])]),t._v(" "),s("h3",{attrs:{id:"git-init-初始化仓库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-init-初始化仓库"}},[t._v("#")]),t._v(" git init (初始化仓库)")]),t._v(" "),s("p",[t._v("Git使用git init命令来初始化一个Git仓库，执行完git init命令后，会生成一个.git目录，该目录包含了资源数据，且只会在仓库的根目录生成。")]),t._v(" "),s("p",[t._v("如果用当前目录作为Git仓库，则只需要执行如下命令：")]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" init\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("执行该命令之后，就可以在当前目录下生成.init文件夹，并且会默认生成一个master分支。")]),t._v(" "),s("p",[t._v("如果要在指定的目录下生成仓库，则指令如下：")]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" init newDir\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("newDir为仓库的路径，执行完成之后，会在newDir目录下生成一个.git目录，执行该命令之后，就可以在当前目录下生成newtest文件夹，并在改文件夹下生成.init文件夹")]),t._v(" "),s("h3",{attrs:{id:"git-clone-拷贝项目"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-clone-拷贝项目"}},[t._v("#")]),t._v(" git clone (拷贝项目)")]),t._v(" "),s("p",[t._v("使用git clone命令可以从Git仓库拷贝项目")]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("url"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("directory"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("url为git仓库地址，directory为本地目录，比如，要克隆某个Git 代码仓库，可以用下面的命令：")]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("https://github.com/joblxs/docs-site.git newgit\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("git clone 时，可以用不同的协议，包括 ssh, git, https 等")]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone git@github.com/joblxs/docs-site.git --SSH协议\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone git://github.com/joblxs/docs-site.git --GIT协议\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone https://github.com/joblxs/docs-site.git --HTTPS协议\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("h2",{attrs:{id:"git-基本指令的使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-基本指令的使用"}},[t._v("#")]),t._v(" Git 基本指令的使用")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("git config")]),t._v("：配置信息")]),t._v(" "),s("li",[s("strong",[t._v("git add")]),t._v("：添加文件到缓存命令")]),t._v(" "),s("li",[s("strong",[t._v("git status")]),t._v("：查看文件的状态命令")]),t._v(" "),s("li",[s("strong",[t._v("git diff")]),t._v("：查看更新的详细信息命令")]),t._v(" "),s("li",[s("strong",[t._v("git commit")]),t._v("：提交命令")]),t._v(" "),s("li",[s("strong",[t._v("git reset HEAD")]),t._v("：取消缓存命令")]),t._v(" "),s("li",[s("strong",[t._v("git rm")]),t._v("：删除命令")]),t._v(" "),s("li",[s("strong",[t._v("git mv")]),t._v("：移动或重命名命令")])]),t._v(" "),s("h3",{attrs:{id:"git-config-配置信息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-config-配置信息"}},[t._v("#")]),t._v(" git config (配置信息)")]),t._v(" "),s("p",[t._v("通过git config来配置用户名和邮箱地址，便于我们将代码提交到远程仓库")]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--global")]),t._v(" user.name "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'你的用户名'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--global")]),t._v(" user.email "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'你的邮箱'")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("h3",{attrs:{id:"git-add-添加文件到暂存区"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-add-添加文件到暂存区"}},[t._v("#")]),t._v(" git add (添加文件到暂存区)")]),t._v(" "),s("p",[t._v("将文件添加到缓存，如新项目中，添加所有文件")]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("也可以指定某一类文件，如将java文件添加到缓存中")]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" *.java\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h3",{attrs:{id:"git-status-查看文件状态"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-status-查看文件状态"}},[t._v("#")]),t._v(" git status (查看文件状态)")]),t._v(" "),s("p",[t._v("使用 git status 命令来查看相关文件的状态")]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" status\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("ul",[s("li",[t._v("暂存文件的命令："),s("strong",[t._v("git add <文件名>")])]),t._v(" "),s("li",[t._v("放弃未暂存文件的修改命令："),s("strong",[t._v("git checkout – <文件名>")])]),t._v(" "),s("li",[t._v("将被修改的文件暂存并提交的命令："),s("strong",[t._v("git commit -a")])])]),t._v(" "),s("h3",{attrs:{id:"git-diff-查看更新信息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-diff-查看更新信息"}},[t._v("#")]),t._v(" git diff (查看更新信息)")]),t._v(" "),s("p",[t._v("执行 git diff 来查看更新的详细信息，与git status不同的是，git status只显示更新的状态，而 git diff 可以显示已写入缓存与已修改但尚未写入缓存的改动的区别具体的详细信息")]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("ul",[s("li",[t._v("尚未缓存的改动："),s("strong",[t._v("git diff")])]),t._v(" "),s("li",[t._v("查看已缓存的改动： "),s("strong",[t._v("git diff --cached")])]),t._v(" "),s("li",[t._v("查看已缓存的与未缓存的所有改动："),s("strong",[t._v("git diff HEAD")])]),t._v(" "),s("li",[t._v("显示摘要而非整个 diff："),s("strong",[t._v("git diff --stat")])])]),t._v(" "),s("h3",{attrs:{id:"git-commit-提交到本地库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-commit-提交到本地库"}},[t._v("#")]),t._v(" git commit (提交到本地库)")]),t._v(" "),s("p",[t._v("git commit 将缓存区内容添加到仓库中，可以在后面加-m选项，以在命令行中提供提交注释")]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-m")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"第一次版本提交"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-am")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"第一次版本提交"')]),t._v(" // 跳过git add直接提交\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("h3",{attrs:{id:"git-reset-head-取消已缓存的内容"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-reset-head-取消已缓存的内容"}},[t._v("#")]),t._v(" git reset HEAD (取消已缓存的内容)")]),t._v(" "),s("p",[t._v("用于取消已缓存的内容，如我们要取消已提交的test.txt文件，可以如下使用")]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset HEAD test.txt\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("执行完之后，再使用commit提交时，test.txt文件不会被提交。")]),t._v(" "),s("h3",{attrs:{id:"git-rm-删除文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-rm-删除文件"}},[t._v("#")]),t._v(" git rm (删除文件)")]),t._v(" "),s("p",[t._v("如果只是简单地从工作目录中手工删除文件，运行 git status 时就会在 Changes not staged for commit 的提示。要从 Git 中移除某个文件，就必须要从已跟踪文件清单中移除，然后提交。可以如下使用：")]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("file"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("如果删除之前修改过并且已经放到暂存区域的话，则必须要用强制删除选项 -f")]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-f")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("file"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("如果把文件从暂存区域移除，但仍然希望保留在当前工作目录中，换句话说，仅是从跟踪清单中删除，使用 --cached 选项即可")]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--cached")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("file"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("可以递归删除，即如果后面跟的是一个目录做为参数，则会递归删除整个目录中的所有子目录和文件：")]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" –r *\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h3",{attrs:{id:"git-mv-移动或重命名"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-mv-移动或重命名"}},[t._v("#")]),t._v(" git mv (移动或重命名)")]),t._v(" "),s("p",[t._v("移动或重命名一个文件、目录、软连接")]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mv")]),t._v(" test.txt newtest.txt\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h2",{attrs:{id:"git的分支管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git的分支管理"}},[t._v("#")]),t._v(" Git的分支管理")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("git branch")]),t._v("：查看分支命令")]),t._v(" "),s("li",[s("strong",[t._v("git branch (branchname)")]),t._v("：创建分支命令")]),t._v(" "),s("li",[s("strong",[t._v("git checkout (branchname)")]),t._v("：切换分支命令")]),t._v(" "),s("li",[s("strong",[t._v("git merge")]),t._v("：合并分支命令")]),t._v(" "),s("li",[s("strong",[t._v("git branch -d (branchname)")]),t._v("：删除分支命令")])]),t._v(" "),s("h3",{attrs:{id:"git-branch-查看分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-branch-查看分支"}},[t._v("#")]),t._v(" git branch (查看分支)")]),t._v(" "),s("p",[t._v("git branch可以查看分支，也可以创建分支，如果没有参数时，git branch会列出你在本地的分支；如果有参数时，git branch就会创建改参数的分支")]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-d")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("branchname"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" //删除分支\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("当我们想创建分支时，可以在后面加参数，命令格式如下：")]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch branchname\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h3",{attrs:{id:"git-checkout-切换分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-checkout-切换分支"}},[t._v("#")]),t._v(" git checkout (切换分支)")]),t._v(" "),s("p",[t._v("git checkout可以切换分支，命令格式如下")]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout branchname\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-b")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("branchname"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" //创建新分支并立即切换到该分支下\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("h3",{attrs:{id:"git-merge-合并分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-merge-合并分支"}},[t._v("#")]),t._v(" git merge (合并分支)")]),t._v(" "),s("p",[t._v("git merge命令可以将任意分支合并到到当前分支中去")]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge branchname\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h3",{attrs:{id:"git-log-提交历史"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-log-提交历史"}},[t._v("#")]),t._v(" git log (提交历史)")]),t._v(" "),s("p",[t._v("在使用 Git 提交了若干更新之后，又或者克隆了某个项目，想回顾下提交历史，我们可以使用 "),s("strong",[t._v("git log")]),t._v(" 命令查看，如，我们想列出历史提交记录如下：")]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("ul",[s("li",[s("strong",[t._v("–oneline")]),t._v(" ：查看历史记录的简洁版本")]),t._v(" "),s("li",[s("strong",[t._v("–graph")]),t._v(" ：查看历史中什么时候出现了分支、合并")]),t._v(" "),s("li",[s("strong",[t._v("–reverse")]),t._v(" ：逆向显示所有日志")]),t._v(" "),s("li",[s("strong",[t._v("–author")]),t._v(" ：查找指定用户的提交日志")]),t._v(" "),s("li",[s("strong",[t._v("–since、–before、 --until、–after")]),t._v("： 指定筛选日期")]),t._v(" "),s("li",[s("strong",[t._v("–no-merges")]),t._v(" ：选项以隐藏合并提交")])]),t._v(" "),s("h2",{attrs:{id:"git-远程仓库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-远程仓库"}},[t._v("#")]),t._v(" Git 远程仓库")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("git remote add")]),t._v("：添加远程仓库")]),t._v(" "),s("li",[s("strong",[t._v("git remote")]),t._v("：查看当前的远程仓库")]),t._v(" "),s("li",[s("strong",[t._v("git fetch")]),t._v("、"),s("strong",[t._v("git pull")]),t._v("：提取远程仓库")]),t._v(" "),s("li",[s("strong",[t._v("git push")]),t._v("：推送到远程仓库")]),t._v(" "),s("li",[s("strong",[t._v("git remote rm")]),t._v("：删除远程仓库")])]),t._v(" "),s("h3",{attrs:{id:"git-remote-add-添加远程仓库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-remote-add-添加远程仓库"}},[t._v("#")]),t._v(" git remote add (添加远程仓库)")]),t._v(" "),s("p",[t._v("git remote add可以添加一个远程仓库")]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("alias"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("url"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" origin https://github.com/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("./x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".x.git\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("参数"),s("code",[t._v("alias")]),t._v("为别名， "),s("code",[t._v("url")]),t._v("为远程仓库的地址")]),t._v(" "),s("h3",{attrs:{id:"git-remote-当前远程仓库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-remote-当前远程仓库"}},[t._v("#")]),t._v(" git remote (当前远程仓库)")]),t._v(" "),s("p",[t._v("git remote可以查看当前有哪些远程仓库")]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h3",{attrs:{id:"git-fetch-提取远程仓库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-fetch-提取远程仓库"}},[t._v("#")]),t._v(" git fetch(提取远程仓库)")]),t._v(" "),s("p",[s("strong",[t._v("git fetch")]),t._v("可以提取远程仓库的数据，如果有多个远程仓库，我们可以在后面加仓库的别名")]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" fetch "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("该命令执行完后需要执行git merge 远程分支到你所在的分支。假设你配置好了一个远程仓库，并且你想要提取更新的数据，你可以首先执行 git fetch "),s("code",[t._v("alias")]),t._v(" 告诉 Git 去获取它有你没有的数据，然后你可以执行 git merge "),s("code",[t._v("alias")]),t._v("/"),s("code",[t._v("branch")]),t._v(" 以将服务器上的任何更新（假设有人这时候推送到服务器了）合并到你的当前分支。")]),t._v(" "),s("h3",{attrs:{id:"git-pull-拉取"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-pull-拉取"}},[t._v("#")]),t._v(" git pull (拉取)")]),t._v(" "),s("p",[t._v("用于从另一个存储库或本地分支获取并集成(整合)，在默认模式下，git pull是git fetch后跟git merge FETCH_HEAD的缩写")]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("options"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("repository"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("refspec"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("…"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("若无效果则尝试")]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--rebase")]),t._v(" origin master\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("我们可以将远程仓库pull到本地，如果本地仓库和远程仓库实际上是独立的两个仓库，–allow-unrelated-history选项来解决。")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("git fetch")]),t._v("和"),s("strong",[t._v("git pull")]),t._v("的区别：")])]),t._v(" "),s("ol",[s("li",[t._v("git fetch：相当于是从远程获取最新版本到本地，不会自动合并。")]),t._v(" "),s("li",[t._v("git pull：相当于是从远程获取最新版本并merge到本地。")])]),t._v(" "),s("h3",{attrs:{id:"git-push-推送"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-push-推送"}},[t._v("#")]),t._v(" git push (推送)")]),t._v(" "),s("p",[t._v("推送你的新分支与数据到某个远端仓库命令")]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("alias"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("branch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-u")]),t._v(" origin master\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h3",{attrs:{id:"git-remote-rm-删除远程仓库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-remote-rm-删除远程仓库"}},[t._v("#")]),t._v(" git remote rm (删除远程仓库)")]),t._v(" "),s("p",[t._v("删除远程仓库")]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("别名"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-u")]),t._v(" origin master\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])])])}),[],!1,null,null,null);s.default=n.exports}}]);